//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Agency.IISChargeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.thatindigogirl.com/samples/2006/06", ConfigurationName="IISChargeService.IAgencyService")]
    public interface IAgencyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/IsValidAgency", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/IsValidAgencyRespons" +
            "e")]
        bool IsValidAgency(int username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/IsValidAgency", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/IsValidAgencyRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> IsValidAgencyAsync(int username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestCharge", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestChargeRespons" +
            "e")]
        string RequestCharge(string Operator, string Category, int AgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestCharge", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestChargeRespons" +
            "e")]
        System.Threading.Tasks.Task<string> RequestChargeAsync(string Operator, string Category, int AgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestDailyReport", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestDailyReportRe" +
            "sponse")]
        AgencyBusinessLayer.IISChargeService.ChargeTable RequestDailyReport(int AgencyID, System.DateTime FromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestDailyReport", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestDailyReportRe" +
            "sponse")]
        System.Threading.Tasks.Task<AgencyBusinessLayer.IISChargeService.ChargeTable> RequestDailyReportAsync(int AgencyID, System.DateTime FromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestMonthlyReport" +
            "", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestMonthlyReport" +
            "Response")]
        AgencyBusinessLayer.IISChargeService.ChargeTable RequestMonthlyReport(int AgencyID, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestMonthlyReport" +
            "", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAgencyService/RequestMonthlyReport" +
            "Response")]
        System.Threading.Tasks.Task<AgencyBusinessLayer.IISChargeService.ChargeTable> RequestMonthlyReportAsync(int AgencyID, int year);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAgencyServiceChannel : Agency.IISChargeService.IAgencyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgencyServiceClient : System.ServiceModel.ClientBase<Agency.IISChargeService.IAgencyService>, Agency.IISChargeService.IAgencyService {
        
        public AgencyServiceClient() {
        }
        
        public AgencyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AgencyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgencyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgencyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsValidAgency(int username, string password) {
            return base.Channel.IsValidAgency(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidAgencyAsync(int username, string password) {
            return base.Channel.IsValidAgencyAsync(username, password);
        }
        
        public string RequestCharge(string Operator, string Category, int AgencyID) {
            return base.Channel.RequestCharge(Operator, Category, AgencyID);
        }
        
        public System.Threading.Tasks.Task<string> RequestChargeAsync(string Operator, string Category, int AgencyID) {
            return base.Channel.RequestChargeAsync(Operator, Category, AgencyID);
        }
        
        public AgencyBusinessLayer.IISChargeService.ChargeTable RequestDailyReport(int AgencyID, System.DateTime FromDate, System.DateTime ToDate) {
            return base.Channel.RequestDailyReport(AgencyID, FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<AgencyBusinessLayer.IISChargeService.ChargeTable> RequestDailyReportAsync(int AgencyID, System.DateTime FromDate, System.DateTime ToDate) {
            return base.Channel.RequestDailyReportAsync(AgencyID, FromDate, ToDate);
        }
        
        public AgencyBusinessLayer.IISChargeService.ChargeTable RequestMonthlyReport(int AgencyID, int year) {
            return base.Channel.RequestMonthlyReport(AgencyID, year);
        }
        
        public System.Threading.Tasks.Task<AgencyBusinessLayer.IISChargeService.ChargeTable> RequestMonthlyReportAsync(int AgencyID, int year) {
            return base.Channel.RequestMonthlyReportAsync(AgencyID, year);
        }
    }
}
