//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompanyBussinesLayer.IISChargeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeTable", Namespace="http://schemas.datacontract.org/2004/07/ChargeServiceContracts")]
    [System.SerializableAttribute()]
    public partial class ChargeTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable GetChargeTableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable GetChargeTable {
            get {
                return this.GetChargeTableField;
            }
            set {
                if ((object.ReferenceEquals(this.GetChargeTableField, value) != true)) {
                    this.GetChargeTableField = value;
                    this.RaisePropertyChanged("GetChargeTable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.thatindigogirl.com/samples/2006/06", ConfigurationName="IISChargeService.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/RetriveNumberOfCharge" +
            "In_Server", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/RetriveNumberOfCharge" +
            "In_ServerResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable RetriveNumberOfChargeIn_Server();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/RetriveNumberOfCharge" +
            "In_Server", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/RetriveNumberOfCharge" +
            "In_ServerResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> RetriveNumberOfChargeIn_ServerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfCompanyPurcha" +
            "sedCharge", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfCompanyPurcha" +
            "sedChargeResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable NumberOfCompanyPurchasedCharge(System.DateTime BeginDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfCompanyPurcha" +
            "sedCharge", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfCompanyPurcha" +
            "sedChargeResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> NumberOfCompanyPurchasedChargeAsync(System.DateTime BeginDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_AllChargesInW" +
            "hole_Server", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_AllChargesInW" +
            "hole_ServerResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable DayBase_AllChargesInWhole_Server(System.DateTime BeginDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_AllChargesInW" +
            "hole_Server", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_AllChargesInW" +
            "hole_ServerResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> DayBase_AllChargesInWhole_ServerAsync(System.DateTime BeginDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_AllChargesIn" +
            "Whole_Server", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_AllChargesIn" +
            "Whole_ServerResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable TimeBase_AllChargesInWhole_Server(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_AllChargesIn" +
            "Whole_Server", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_AllChargesIn" +
            "Whole_ServerResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> TimeBase_AllChargesInWhole_ServerAsync(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfCompanySoldCh" +
            "arge", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfCompanySoldCh" +
            "argeResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable NumberOfCompanySoldCharge(System.DateTime BeginDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfCompanySoldCh" +
            "arge", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfCompanySoldCh" +
            "argeResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> NumberOfCompanySoldChargeAsync(System.DateTime BeginDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_CompanySoldDa" +
            "ily", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_CompanySoldDa" +
            "ilyResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable DayBase_CompanySoldDaily(System.DateTime BeginDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_CompanySoldDa" +
            "ily", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_CompanySoldDa" +
            "ilyResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> DayBase_CompanySoldDailyAsync(System.DateTime BeginDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_CompanySoldD" +
            "aily", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_CompanySoldD" +
            "ailyResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable TimeBase_CompanySoldDaily(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_CompanySoldD" +
            "aily", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_CompanySoldD" +
            "ailyResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> TimeBase_CompanySoldDailyAsync(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfAgencySoldCha" +
            "rge", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfAgencySoldCha" +
            "rgeResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable NumberOfAgencySoldCharge(System.DateTime BeginDate, System.DateTime EndDate, long AgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfAgencySoldCha" +
            "rge", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/NumberOfAgencySoldCha" +
            "rgeResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> NumberOfAgencySoldChargeAsync(System.DateTime BeginDate, System.DateTime EndDate, long AgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_AgencySoldDai" +
            "ly", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_AgencySoldDai" +
            "lyResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable DayBase_AgencySoldDaily(System.DateTime BeginDate, System.DateTime EndDate, long AgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_AgencySoldDai" +
            "ly", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/DayBase_AgencySoldDai" +
            "lyResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> DayBase_AgencySoldDailyAsync(System.DateTime BeginDate, System.DateTime EndDate, long AgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_AgencySoldDa" +
            "ily", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_AgencySoldDa" +
            "ilyResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable TimeBase_AgencySoldDaily(System.DateTime Date, long AgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_AgencySoldDa" +
            "ily", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TimeBase_AgencySoldDa" +
            "ilyResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> TimeBase_AgencySoldDailyAsync(System.DateTime Date, long AgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/IsValidUser", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/IsValidUserResponse")]
        bool IsValidUser(long username, string password, bool isOperator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/IsValidUser", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/IsValidUserResponse")]
        System.Threading.Tasks.Task<bool> IsValidUserAsync(long username, string password, bool isOperator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddNewAgency", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddNewAgencyResponse")]
        bool AddNewAgency(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    string storename, 
                    int creditbalance, 
                    string storetell, 
                    string storetype, 
                    string storeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddNewAgency", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddNewAgencyResponse")]
        System.Threading.Tasks.Task<bool> AddNewAgencyAsync(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    string storename, 
                    int creditbalance, 
                    string storetell, 
                    string storetype, 
                    string storeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddNewOperator", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddNewOperatorRespons" +
            "e")]
        bool AddNewOperator(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddNewOperator", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddNewOperatorRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> AddNewOperatorAsync(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AgenciesList", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AgenciesListResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable AgenciesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AgenciesList", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AgenciesListResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> AgenciesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/GetAgencyInformation", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/GetAgencyInformationR" +
            "esponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable GetAgencyInformation(long username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/GetAgencyInformation", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/GetAgencyInformationR" +
            "esponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> GetAgencyInformationAsync(long username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/EditAgencyInformation" +
            "", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/EditAgencyInformation" +
            "Response")]
        bool EditAgencyInformation(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    string storename, 
                    int creditbalance, 
                    string storetell, 
                    string storetype, 
                    string storeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/EditAgencyInformation" +
            "", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/EditAgencyInformation" +
            "Response")]
        System.Threading.Tasks.Task<bool> EditAgencyInformationAsync(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    string storename, 
                    int creditbalance, 
                    string storetell, 
                    string storetype, 
                    string storeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/OperatorsList", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/OperatorsListResponse" +
            "")]
        CompanyBussinesLayer.IISChargeService.ChargeTable OperatorsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/OperatorsList", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/OperatorsListResponse" +
            "")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> OperatorsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/GetOperatorInformatio" +
            "n", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/GetOperatorInformatio" +
            "nResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable GetOperatorInformation(long username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/GetOperatorInformatio" +
            "n", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/GetOperatorInformatio" +
            "nResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> GetOperatorInformationAsync(long username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/EditOperatorInformati" +
            "on", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/EditOperatorInformati" +
            "onResponse")]
        bool EditOperatorInformation(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/EditOperatorInformati" +
            "on", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/EditOperatorInformati" +
            "onResponse")]
        System.Threading.Tasks.Task<bool> EditOperatorInformationAsync(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddCharge", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddChargeResponse")]
        bool AddCharge(CompanyBussinesLayer.IISChargeService.ChargeTable ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddCharge", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/AddChargeResponse")]
        System.Threading.Tasks.Task<bool> AddChargeAsync(CompanyBussinesLayer.IISChargeService.ChargeTable ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/PrepareFor_TransferCh" +
            "argeFrom_Server_To_FrontStore", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/PrepareFor_TransferCh" +
            "argeFrom_Server_To_FrontStoreResponse")]
        void PrepareFor_TransferChargeFrom_Server_To_FrontStore(int ChargeCount, string operatorname, int pricecategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/PrepareFor_TransferCh" +
            "argeFrom_Server_To_FrontStore", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/PrepareFor_TransferCh" +
            "argeFrom_Server_To_FrontStoreResponse")]
        System.Threading.Tasks.Task PrepareFor_TransferChargeFrom_Server_To_FrontStoreAsync(int ChargeCount, string operatorname, int pricecategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TransferChargeFrom_Se" +
            "rver_To_FrontStore", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TransferChargeFrom_Se" +
            "rver_To_FrontStoreResponse")]
        CompanyBussinesLayer.IISChargeService.ChargeTable TransferChargeFrom_Server_To_FrontStore();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TransferChargeFrom_Se" +
            "rver_To_FrontStore", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TransferChargeFrom_Se" +
            "rver_To_FrontStoreResponse")]
        System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> TransferChargeFrom_Server_To_FrontStoreAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TransferChargeFrom_Fr" +
            "ontStore_To_Server", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TransferChargeFrom_Fr" +
            "ontStore_To_ServerResponse")]
        bool TransferChargeFrom_FrontStore_To_Server(System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TransferChargeFrom_Fr" +
            "ontStore_To_Server", ReplyAction="http://www.thatindigogirl.com/samples/2006/06/IAdminService/TransferChargeFrom_Fr" +
            "ontStore_To_ServerResponse")]
        System.Threading.Tasks.Task<bool> TransferChargeFrom_FrontStore_To_ServerAsync(System.Data.DataTable dt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : CompanyBussinesLayer.IISChargeService.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<CompanyBussinesLayer.IISChargeService.IAdminService>, CompanyBussinesLayer.IISChargeService.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable RetriveNumberOfChargeIn_Server() {
            return base.Channel.RetriveNumberOfChargeIn_Server();
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> RetriveNumberOfChargeIn_ServerAsync() {
            return base.Channel.RetriveNumberOfChargeIn_ServerAsync();
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable NumberOfCompanyPurchasedCharge(System.DateTime BeginDate, System.DateTime EndDate) {
            return base.Channel.NumberOfCompanyPurchasedCharge(BeginDate, EndDate);
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> NumberOfCompanyPurchasedChargeAsync(System.DateTime BeginDate, System.DateTime EndDate) {
            return base.Channel.NumberOfCompanyPurchasedChargeAsync(BeginDate, EndDate);
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable DayBase_AllChargesInWhole_Server(System.DateTime BeginDate, System.DateTime EndDate) {
            return base.Channel.DayBase_AllChargesInWhole_Server(BeginDate, EndDate);
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> DayBase_AllChargesInWhole_ServerAsync(System.DateTime BeginDate, System.DateTime EndDate) {
            return base.Channel.DayBase_AllChargesInWhole_ServerAsync(BeginDate, EndDate);
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable TimeBase_AllChargesInWhole_Server(System.DateTime Date) {
            return base.Channel.TimeBase_AllChargesInWhole_Server(Date);
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> TimeBase_AllChargesInWhole_ServerAsync(System.DateTime Date) {
            return base.Channel.TimeBase_AllChargesInWhole_ServerAsync(Date);
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable NumberOfCompanySoldCharge(System.DateTime BeginDate, System.DateTime EndDate) {
            return base.Channel.NumberOfCompanySoldCharge(BeginDate, EndDate);
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> NumberOfCompanySoldChargeAsync(System.DateTime BeginDate, System.DateTime EndDate) {
            return base.Channel.NumberOfCompanySoldChargeAsync(BeginDate, EndDate);
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable DayBase_CompanySoldDaily(System.DateTime BeginDate, System.DateTime EndDate) {
            return base.Channel.DayBase_CompanySoldDaily(BeginDate, EndDate);
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> DayBase_CompanySoldDailyAsync(System.DateTime BeginDate, System.DateTime EndDate) {
            return base.Channel.DayBase_CompanySoldDailyAsync(BeginDate, EndDate);
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable TimeBase_CompanySoldDaily(System.DateTime Date) {
            return base.Channel.TimeBase_CompanySoldDaily(Date);
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> TimeBase_CompanySoldDailyAsync(System.DateTime Date) {
            return base.Channel.TimeBase_CompanySoldDailyAsync(Date);
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable NumberOfAgencySoldCharge(System.DateTime BeginDate, System.DateTime EndDate, long AgencyID) {
            return base.Channel.NumberOfAgencySoldCharge(BeginDate, EndDate, AgencyID);
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> NumberOfAgencySoldChargeAsync(System.DateTime BeginDate, System.DateTime EndDate, long AgencyID) {
            return base.Channel.NumberOfAgencySoldChargeAsync(BeginDate, EndDate, AgencyID);
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable DayBase_AgencySoldDaily(System.DateTime BeginDate, System.DateTime EndDate, long AgencyID) {
            return base.Channel.DayBase_AgencySoldDaily(BeginDate, EndDate, AgencyID);
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> DayBase_AgencySoldDailyAsync(System.DateTime BeginDate, System.DateTime EndDate, long AgencyID) {
            return base.Channel.DayBase_AgencySoldDailyAsync(BeginDate, EndDate, AgencyID);
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable TimeBase_AgencySoldDaily(System.DateTime Date, long AgencyID) {
            return base.Channel.TimeBase_AgencySoldDaily(Date, AgencyID);
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> TimeBase_AgencySoldDailyAsync(System.DateTime Date, long AgencyID) {
            return base.Channel.TimeBase_AgencySoldDailyAsync(Date, AgencyID);
        }
        
        public bool IsValidUser(long username, string password, bool isOperator) {
            return base.Channel.IsValidUser(username, password, isOperator);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidUserAsync(long username, string password, bool isOperator) {
            return base.Channel.IsValidUserAsync(username, password, isOperator);
        }
        
        public bool AddNewAgency(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    string storename, 
                    int creditbalance, 
                    string storetell, 
                    string storetype, 
                    string storeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues) {
            return base.Channel.AddNewAgency(username, password, firstname, lastname, fathername, gender, birthdate, certificatecode, certificateplace, mobilenum, email, homepostalcode, homeaddress, storename, creditbalance, storetell, storetype, storeaddress, signupdate, lasteditdate, lasteditedby, statues);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewAgencyAsync(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    string storename, 
                    int creditbalance, 
                    string storetell, 
                    string storetype, 
                    string storeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues) {
            return base.Channel.AddNewAgencyAsync(username, password, firstname, lastname, fathername, gender, birthdate, certificatecode, certificateplace, mobilenum, email, homepostalcode, homeaddress, storename, creditbalance, storetell, storetype, storeaddress, signupdate, lasteditdate, lasteditedby, statues);
        }
        
        public bool AddNewOperator(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues) {
            return base.Channel.AddNewOperator(username, password, firstname, lastname, fathername, gender, birthdate, certificatecode, certificateplace, mobilenum, email, homepostalcode, homeaddress, signupdate, lasteditdate, lasteditedby, statues);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewOperatorAsync(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues) {
            return base.Channel.AddNewOperatorAsync(username, password, firstname, lastname, fathername, gender, birthdate, certificatecode, certificateplace, mobilenum, email, homepostalcode, homeaddress, signupdate, lasteditdate, lasteditedby, statues);
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable AgenciesList() {
            return base.Channel.AgenciesList();
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> AgenciesListAsync() {
            return base.Channel.AgenciesListAsync();
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable GetAgencyInformation(long username) {
            return base.Channel.GetAgencyInformation(username);
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> GetAgencyInformationAsync(long username) {
            return base.Channel.GetAgencyInformationAsync(username);
        }
        
        public bool EditAgencyInformation(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    string storename, 
                    int creditbalance, 
                    string storetell, 
                    string storetype, 
                    string storeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues) {
            return base.Channel.EditAgencyInformation(username, password, firstname, lastname, fathername, gender, birthdate, certificatecode, certificateplace, mobilenum, email, homepostalcode, homeaddress, storename, creditbalance, storetell, storetype, storeaddress, signupdate, lasteditdate, lasteditedby, statues);
        }
        
        public System.Threading.Tasks.Task<bool> EditAgencyInformationAsync(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    string storename, 
                    int creditbalance, 
                    string storetell, 
                    string storetype, 
                    string storeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues) {
            return base.Channel.EditAgencyInformationAsync(username, password, firstname, lastname, fathername, gender, birthdate, certificatecode, certificateplace, mobilenum, email, homepostalcode, homeaddress, storename, creditbalance, storetell, storetype, storeaddress, signupdate, lasteditdate, lasteditedby, statues);
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable OperatorsList() {
            return base.Channel.OperatorsList();
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> OperatorsListAsync() {
            return base.Channel.OperatorsListAsync();
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable GetOperatorInformation(long username) {
            return base.Channel.GetOperatorInformation(username);
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> GetOperatorInformationAsync(long username) {
            return base.Channel.GetOperatorInformationAsync(username);
        }
        
        public bool EditOperatorInformation(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues) {
            return base.Channel.EditOperatorInformation(username, password, firstname, lastname, fathername, gender, birthdate, certificatecode, certificateplace, mobilenum, email, homepostalcode, homeaddress, signupdate, lasteditdate, lasteditedby, statues);
        }
        
        public System.Threading.Tasks.Task<bool> EditOperatorInformationAsync(
                    long username, 
                    string password, 
                    string firstname, 
                    string lastname, 
                    string fathername, 
                    string gender, 
                    string birthdate, 
                    string certificatecode, 
                    string certificateplace, 
                    string mobilenum, 
                    string email, 
                    string homepostalcode, 
                    string homeaddress, 
                    System.DateTime signupdate, 
                    System.DateTime lasteditdate, 
                    long lasteditedby, 
                    bool statues) {
            return base.Channel.EditOperatorInformationAsync(username, password, firstname, lastname, fathername, gender, birthdate, certificatecode, certificateplace, mobilenum, email, homepostalcode, homeaddress, signupdate, lasteditdate, lasteditedby, statues);
        }
        
        public bool AddCharge(CompanyBussinesLayer.IISChargeService.ChargeTable ct) {
            return base.Channel.AddCharge(ct);
        }
        
        public System.Threading.Tasks.Task<bool> AddChargeAsync(CompanyBussinesLayer.IISChargeService.ChargeTable ct) {
            return base.Channel.AddChargeAsync(ct);
        }
        
        public void PrepareFor_TransferChargeFrom_Server_To_FrontStore(int ChargeCount, string operatorname, int pricecategory) {
            base.Channel.PrepareFor_TransferChargeFrom_Server_To_FrontStore(ChargeCount, operatorname, pricecategory);
        }
        
        public System.Threading.Tasks.Task PrepareFor_TransferChargeFrom_Server_To_FrontStoreAsync(int ChargeCount, string operatorname, int pricecategory) {
            return base.Channel.PrepareFor_TransferChargeFrom_Server_To_FrontStoreAsync(ChargeCount, operatorname, pricecategory);
        }
        
        public CompanyBussinesLayer.IISChargeService.ChargeTable TransferChargeFrom_Server_To_FrontStore() {
            return base.Channel.TransferChargeFrom_Server_To_FrontStore();
        }
        
        public System.Threading.Tasks.Task<CompanyBussinesLayer.IISChargeService.ChargeTable> TransferChargeFrom_Server_To_FrontStoreAsync() {
            return base.Channel.TransferChargeFrom_Server_To_FrontStoreAsync();
        }
        
        public bool TransferChargeFrom_FrontStore_To_Server(System.Data.DataTable dt) {
            return base.Channel.TransferChargeFrom_FrontStore_To_Server(dt);
        }
        
        public System.Threading.Tasks.Task<bool> TransferChargeFrom_FrontStore_To_ServerAsync(System.Data.DataTable dt) {
            return base.Channel.TransferChargeFrom_FrontStore_To_ServerAsync(dt);
        }
    }
}
